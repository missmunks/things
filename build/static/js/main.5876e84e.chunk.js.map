{"version":3,"sources":["components/AccountForm.js","components/AddPost.js","components/MessageForm.js","components/AllPosts.js","components/Nav.js","components/Profile.js","index.js"],"names":["AccountForm","type","setToken","setUser","useState","username","setUserName","password","setUserPassword","title","oppositeTitle","oppositeType","handleSubmit","ev","a","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","user","response","json","data","token","localStorage","setItem","myToken","getItem","onSubmit","value","onChange","target","placeholder","to","AddPost","posts","setPosts","setTitle","price","setPrice","description","setDescription","location","setLocation","author","setAuthor","handleClick","event","alert","post","onClick","MessageForm","messages","setMessages","useEffect","getPosts","_id","handleMessage","AllPosts","handleDelete","id","map","className","isAuthor","Nav","Profile","content","setContent","handleUser","message","idx","fromUser","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5876e84e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\n// import { AccountForm } from '.';\n\nconst AccountForm = ({type, setToken, setUser}) => {\n  const [username, setUserName] = useState(\"\");\n  const [password, setUserPassword] = useState(\"\");\n \n  const title = type === 'login' ? \"Login\" : \"Register\";\n  const oppositeTitle = type === 'login' ? \"Register\" : \"Login\";\n  const oppositeType = type === 'login' ? \"register\" : \"login\";\n\n  const handleSubmit = async (ev) => {\n    ev.preventDefault();\n    console.log(\"userName\", username)\n    const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/${type}`, {\n      method:'POST',\n      headers:{\"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      user: {username, password}})\n  })\n\n  const {data} = await response.json();\n \n  const token = data?.token;\n  localStorage.setItem(\"myToken\", token)\n  const myToken = localStorage.getItem('myToken')\n  console.log(myToken)\n \n  if(token){\n  setToken(token);\n  const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Authorization\": `Bearer ${token}`, \n    },\n\n  }) \n  const {data} = await response.json();\n  console.log('data' , data);\n  setUser(data) \n\n  \n  }\nsetUserName(\"\");\nsetUserPassword(\"\");\n}\n  \n  return (<>\n  <h2>{title}</h2>\n  <form onSubmit={handleSubmit}>\n    <input type=\"text\" value={username} onChange={(ev) => setUserName( ev.target.value )} placeholder=\"user name\"></input>\n    <input type=\"password\" value={password} onChange={(ev) => setUserPassword( ev.target.value)} placeholder=\"password\"></input>\n    <button type=\"submit\">{title}</button>\n  </form>\n  <Link to={`${oppositeType}`}>{oppositeTitle}</Link>\n\n  </> )\n}\n\nexport default AccountForm;\n\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport {Link} from 'react-router-dom';\n\nconst AddPost = ({token, posts, setPosts}) => {\n  \n  const [title, setTitle] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  \n  \n\n  const handleClick = async(event) => {\n    if(!token){return alert(\"Whoa there Nelly, you can't put your junk here until we deem you worthy. Log in or register to join the cool kids.\")}\n    event.preventDefault();\n    setAuthor(author)\n    const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts`, {  \n        method: 'POST',\n        headers: {\n          \"Content-Type\": 'application/json',\n          \"Authorization\": `Bearer ${token}`, \n        },\n        body: JSON.stringify({\n          post: {\n            title,\n            price,\n            description,\n            location,\n            author\n          }\n        })\n})\n  \nconst data = await response.json();\nconsole.log(data)\nsetPosts([data.data.posts, ...posts])\nconsole.log(data)\n  };\n\n\n\n\nreturn (\n<>\n<form onSubmit= {AddPost}>\n  <input type='text'  placeholder='Title' onChange={(ev) => setTitle( ev.target.value )} />\n  <input type='text'  placeholder='Price' onChange={(ev) => setPrice( ev.target.value )} />\n  <input type='text'  placeholder='description' onChange={(ev) => setDescription( ev.target.value )} />\n  <input type='text'  placeholder='Location' onChange={(ev) => setLocation( ev.target.value )} />\n  <button type='submit' onClick={handleClick}>ADD AWESOMENESS</button>\n</form>\n\n</>\n)\n};\n\n\nexport default AddPost;","import React, {useEffect, useState} from \"react\";\n\n\n\nconst MessageForm = () => {\n  const [posts, setPosts] = useState([])\n  const myToken = localStorage.getItem('myToken')\n  console.log(myToken, \"NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN\")\n  const [messages, setMessages] = useState(\"\");\n\n  useEffect(() => {\n    getPosts();\n  })\n\n  const getPosts = async () => {\n    const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts`, {\n        headers: {\n              'Authorization': `Bearer ${myToken}`\n            }\n          })\n\n    const {data: {posts}} = await response.json()\n    console.log(posts, \"unauth posts\")\n    setPosts(posts) \n    console.log(posts, \"are these posts\") \n\n};\n\n\n console.log(posts, \"XXXXXXXXXXXXXXXXXXXXXX\")\n  const {_id} = posts\n\n\n  const handleMessage = async (ev) => {\n    ev.preventDefault();\n\n    const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts/${_id}/messages`, {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": 'application/json',\n            'Authorization': `Bearer ${myToken}`\n            },\n            body: JSON.stringify({\n              posts: {\n                messages\n              }\n            })\n          })\n          const data = await response.json();\n          console.log(data, \"handle message dataaaaaaaaaaaaaaaaaaaaaaaa\")\n          setMessages(\"\")\n        }\n  console.log(\"this is the post from message form\", posts)\n  return(<>\n    <form onSubmit={handleMessage}>\n      <textarea placeholder=\"Write Message\" value = {messages} onChange={(ev) => setMessages(ev.target.value)}></textarea>\n      <button type=\"submit\">Send Message</button>\n    </form>\n        </>\n  );\n\n  \n}\n\n\n// const MessageForm = ({post}) => {\n//   const [messages, setMessages] = useState([]);\n\n//   const handleMessage= async (id) => {\n//     const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts/${id}`, {\n//         method: 'POST',\n//         headers: {\n//             \"Content-Type\": 'application/json',\n//               'Authorization': `Bearer ${token}`\n//             }\n//           })\n//           const data = await response.json();\n//           console.log(data, \"handle message data\")\n//         }\n//   console.log(\"this is the post from message form\", post)\n//   return(\n//     <form onSubmit={MessageForm}>\n//       <textarea placeholder=\"Write Message\" onChange={(ev) => setMessages(ev.target.value)}></textarea>\n//       <button type=\"submit\" onClick={handleMessage}>Send Message</button>\n//     </form>\n//   );\n// }\n\nexport default MessageForm;\n            \n          \n        \n       \n     \n        \n\n\n\n","import React, { useState, useEffect } from 'react';\nimport MessageForm from './MessageForm';\n\n\nconst AllPosts = ({token, posts, setPosts})=> {\n        if(!posts) {\n            <h1>Nobody is selling anything right now. Try Craigslist.</h1>\n        };\n\n    useEffect(() => {\n        getPosts()\n    }, [])\n  \n    const handleDelete = async (id) => {\n        const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts/${id}`, {\n            method: 'DELETE',\n            headers: {\n                  'Authorization': `Bearer ${token}`\n                }\n              })\n              const data = await response.json();\n              console.log(data, \"handle delete data\")\n            }\n\n      \n    const getPosts = async () => {\n        const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts`, {\n            headers: {\n                  'Authorization': `Bearer ${token}`\n                }\n              })\n    \n        const {data: {posts}} = await response.json()\n        // console.log(posts, \"unauth posts\")\n        setPosts(posts) \n        // console.log(posts, \"are these posts\") \n\n    };\n\n   \n    // const posts = await response.json();\n    // console.log('post data', data)\n    // setPosts(posts);\n    // return posts;\n\n    // const message = () => {\n    //     console.log(\"sandwiches\")\n    //     return(\n    //         <form>\n    //           <textarea placeholder=\"Write Message\" onChange={(ev) => {\n    //               posts.messages = (ev.target.value)}}>\n    //                 {console.log(\"event\", ev.target.value)}\n    //               </textarea>\n    //           <button type=\"submit\">Send Message</button>\n    //         </form>\n    //         )\n    // };\n\n    // const MessageForm = () => {\n    //     console.log(\"tortilla chips\")\n    //     console.log(\"this is the post from message form\", posts)\n    //     return(\n    //       <form>\n    //         <textarea placeholder=\"Write Message\" onChange={(e) => {posts.message = posts.message.e.target.value}}></textarea>\n    //         <button type=\"submit\">Send Message</button>\n    //       </form>\n         \n    //     );\n    //   }\n\n    // const MessageForm = () => {\n    //     const [messages, setMessages] = useState([]);\n      \n    //     const handleMessage= async () => {\n    //       const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts`, {\n    //         //   method: 'POST',\n    //           headers: {\n    //               \"Content-Type\": 'application/json',\n    //                 'Authorization': `Bearer ${token}`\n    //               }\n    //             })\n    //             const data = await response.json();\n    //             console.log(data, \"handle message data\")\n    //           }\n    //     // console.log(\"this is the post from message form\", post)\n    //     return(\n    //       <form onSubmit={MessageForm}>\n    //         <textarea placeholder=\"Write Message\" onChange={(ev) => setMessages(ev.target.value)}></textarea>\n    //         <button type=\"submit\" onClick={handleMessage}>Send Message</button>\n    //       </form>\n    //     );\n    //   }\n\n\nreturn <>\n    { \n        posts.map((post) => {\n            // include is author in obj use is author with stuff\n            const {title, description, price, location, _id, author, messages, username} = post;\n            return (<div key = {_id} className = \"post\">\n                <h2>{title}</h2>\n                <h3>{price}</h3>\n                <div> {description}</div>\n                {location === \"[On Request]\" ? <h3>Location: {location}</h3> : \"\" }\n                <h3>Posted By: {post.author.username}</h3>\n                {/* <h3>{messages}</h3> */}\n                {`${token}` && !post.isAuthor ? <MessageForm /> : \"\" }\n                {`${token}` && post.isAuthor ? <button className=\"btn btn-outline-info\">Edit</button> : \"\" }\n                {`${token}` && post.author.username === \"jess\" ? <button className=\"btn btn-outline-danger\" onClick= {() => {handleDelete(_id)}}>Delete</button> : \"\" }\n              \n               \n            </div>\n            )\n        })\n    }\n\n</>\n\n};\n\nexport default AllPosts;","\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\n\nconst Nav = ({token }) => {\n\n    return (\n        <nav className = \"nav\">\n            <Link to='/Profile'>Profile</Link>\n            <Link to='/AllPosts'>Posts</Link>\n            <Link to='/login' >{token ? \"Logout\" : \"Login\"}</Link>\n            <Link to='/AddPost'>AddPost</Link>\n        </nav>\n    );\n}\n\nexport default Nav;","import React, { useEffect, useState } from 'react';\n\n\n\n\n    const Profile = ( { token, setUser, posts, user, content, setContent } ) => {\n   \n        useEffect(() => {\n            handleUser()\n        }, []);\n\n        console.log(\"potatoes\")\n        const [ messages, setMessages ] = useState([]);\n        const handleUser = async () => {\n            const response = await fetch('https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/me', {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                }),\n                data = await response.json();\n                console.log('user posts: ',data?.data?.posts)\n                console.log(data, \"This is the data where the messages should be\")\n                console.log(\"user messages : \", data?.data?.messages)\n                setMessages(data?.data?.messages)\n            }\n\n            return <>\n    <div>\n         <h2> Messages sent to you: </h2> \n         <div> {messages?.map((message, idx) => {\n             console.log(\"biscuits\")\n             return (\n                    <div key={idx}>\n                        <h3> Message From: { message.fromUser.username === user?.username ? message.fromUser.username : ''} </h3>\n                        <h4>{message.post.title} </h4>\n                        <p>{message.content} </p> <hr/> <br/>\n                    </div>)\n             \n         })}</div>\n         </div>\n         </>\n            };\n        \n  \n    \n  \n  \n//   const getMessages = async () => {\n    \n//     console.log(\"cookies\")\n        \n//               const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/me`, {\n//                 method: 'GET',\n//                 headers: {\n//                   \"Content-Type\": \"application/json\",\n//                   \"Authorization\": `Bearer ${token}`, \n//                 },\n            \n//               }) \n//               const {data} = await response.json();\n//               console.log('message form data' , data);\n//               setUser(user) \n//               console.log(\"user,\", user)\n            \n              \n              \n      \n//             }\n  \n            \n//   console.log(\"this is a user I hope\", user)\n//             return <h1>HI</h1>\n              \n//                 // posts.map((post) => {\n                 \n//                 //   const {username, fromUser, messages} = post\n//                 //   console.log (username, fromUser, messages)\n\n//         };\n                 \n              export default Profile  ","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link\n  } from 'react-router-dom';\n\n  import {\n    AccountForm,\n    AllPosts,\n    AddPost,\n    Profile,\n    MessageForm,\n    // EditPost,\n    Nav\n  } from './components';\n\nimport './bootstrap.css'\nimport './style.css'\n \n\n  const App = () => {\n    const [token, setToken] = useState(\"\");\n    const [user, setUser] = useState({});\n    const [posts, setPosts] = useState([]);\n    const [postId, setPostId] = useState(null);\n    \n\n\n\n\n\n    return <>\n    <h1>Strangers Things</h1>\n    <Nav token = {token}/>\n    \n    {user.username && <h2>Hello {user.username}</h2>}\n    {/* <button type= \"submit\" onClick={setPostId(postId)}>Edit</button> */}\n    <Route path=\"/login\">\n    <AccountForm setToken={setToken} type={'login'} setUser={setUser} posts={posts}/>\n    </Route>\n    <Route path=\"/register\">\n    <AccountForm setToken={setToken} type={'register'} setUser={setUser}/>\n    </Route>\n    <Route path='/Profile'>\n    <Profile token= {token} setToken={setToken} user={user} setUser={setUser} posts={posts} />\n    </Route>\n    <Route path = '/AllPosts'>\n    <AllPosts MessageForm = {MessageForm} token={token} posts={posts} setPosts={setPosts}/>\n    </Route>\n    {/* <Route>\n      <EditPost  postId={postId} setPostId={setPostId}/>\n    </Route> */}\n    <Route  path = '/AddPost' >\n      <AddPost token={token} posts={posts} setPosts={setPosts}/>\n    </Route>\n        </>\n  }\n\n\n  ReactDOM.render(\n    <Router>\n          <App />\n    </Router>,\n     document.getElementById('app')\n  );\n"],"sourceRoot":""}